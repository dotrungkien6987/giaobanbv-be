const express = require("express");
const router = express.Router();
const authentication = require("../../../middlewares/authentication");
const ctrl = require("../controllers/giaoNhiemVu.controller");

// T·∫•t c·∫£ endpoint y√™u c·∫ßu ƒëƒÉng nh·∫≠p
router.use(authentication.loginRequired);

// Danh s√°ch nh√¢n vi√™n thu·ªôc quy·ªÅn qu·∫£n l√Ω c·ªßa m·ªôt ng∆∞·ªùi qu·∫£n l√Ω
router.get("/:NhanVienID/nhan-vien", ctrl.getManagedEmployees);

// Danh s√°ch nhi·ªám v·ª• theo khoa c·ªßa m·ªôt nh√¢n vi√™n
router.get("/nhan-vien/:employeeId/nhiem-vu", ctrl.getDutiesByEmployee);

// Danh s√°ch assignment c·ªßa m·ªôt nh√¢n vi√™n
router.get("/assignments", ctrl.getAssignmentsByEmployee);

// T·ªïng M·ª©c ƒë·ªô kh√≥ v√† s·ªë l∆∞·ª£ng nhi·ªám v·ª• theo t·ª´ng nh√¢n vi√™n
router.get("/assignments/totals", ctrl.getAssignmentTotals);

// G√°n 1 nhi·ªám v·ª•
router.post("/assignments", ctrl.assignOne);

// G√°n h√†ng lo·∫°t
router.post("/assignments/bulk", ctrl.bulkAssign);

// G·ª° g√°n theo id
router.delete("/assignments/:assignmentId", ctrl.unassignById);

// G·ª° g√°n theo c·∫∑p
router.delete("/assignments", ctrl.unassignByPair);

// Batch update assignments for single employee
router.put(
  "/nhan-vien/:employeeId/assignments",
  ctrl.batchUpdateEmployeeAssignments
);

// ============================================================================
// üöÄ NEW: Cycle-based assignment routes
// ============================================================================

// üÜï Get employees with cycle stats (for list view)
// GET /api/workmanagement/giao-nhiem-vu/employees-with-cycle-stats?chuKyId=xxx
router.get("/employees-with-cycle-stats", ctrl.getEmployeesWithCycleStats);

// Get assignments by employee and cycle (with available duties)
// GET /api/workmanagement/giao-nhiem-vu/nhan-vien/:employeeId/by-cycle?chuKyId=xxx
router.get("/nhan-vien/:employeeId/by-cycle", ctrl.getAssignmentsByCycle);

// Batch update cycle assignments
// PUT /api/workmanagement/giao-nhiem-vu/nhan-vien/:employeeId/cycle-assignments
// Body: { chuKyId, tasks: [{ NhiemVuThuongQuyID, MucDoKho }] }
router.put(
  "/nhan-vien/:employeeId/cycle-assignments",
  ctrl.batchUpdateCycleAssignments
);

// Copy from previous cycle
// POST /api/workmanagement/giao-nhiem-vu/nhan-vien/:employeeId/copy-cycle
// Body: { fromChuKyId, toChuKyId }
router.post("/nhan-vien/:employeeId/copy-cycle", ctrl.copyFromPreviousCycle);

module.exports = router;
