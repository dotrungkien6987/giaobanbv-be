/**
 * Manual Test Script for Criteria Sync Helpers
 *
 * Run: node test-criteriaSync.js
 */

const {
  detectCriteriaChanges,
  mergeCriteriaWithPreservedScores,
  formatSyncWarningMessage,
} = require("./modules/workmanagement/helpers/criteriaSync.helper");

console.log("========================================");
console.log("üß™ Testing Criteria Sync Helper Functions");
console.log("========================================\n");

// Test Data
const currentCriteria = [
  {
    TenTieuChi: "Ch·∫•t l∆∞·ª£ng",
    LoaiTieuChi: "TANG_DIEM",
    GiaTriMin: 0,
    GiaTriMax: 100,
    DonVi: "%",
    DiemDat: 85,
    GhiChu: "T·ªët",
  },
  {
    TenTieuChi: "Ti·∫øn ƒë·ªô",
    LoaiTieuChi: "TANG_DIEM",
    GiaTriMin: 0,
    GiaTriMax: 100,
    DonVi: "%",
    DiemDat: 90,
    GhiChu: "Ho√†n th√†nh ƒë√∫ng h·∫°n",
  },
  {
    TenTieuChi: "Vi ph·∫°m c≈©",
    LoaiTieuChi: "GIAM_DIEM",
    GiaTriMin: 0,
    GiaTriMax: 50,
    DonVi: "l·∫ßn",
    DiemDat: 5,
    GhiChu: "2 l·∫ßn tr·ªÖ h·ªçp",
  },
];

const chuKyCriteria = [
  {
    TenTieuChi: "Ch·∫•t l∆∞·ª£ng",
    LoaiTieuChi: "TANG_DIEM",
    GiaTriMin: 0,
    GiaTriMax: 50, // ‚Üê CHANGED: was 100
    DonVi: "%",
    ThuTu: 0,
  },
  {
    TenTieuChi: "Ti·∫øn ƒë·ªô",
    LoaiTieuChi: "TANG_DIEM",
    GiaTriMin: 0,
    GiaTriMax: 100,
    DonVi: "%",
    ThuTu: 1,
  },
  {
    TenTieuChi: "S√°ng t·∫°o", // ‚Üê NEW
    LoaiTieuChi: "TANG_DIEM",
    GiaTriMin: 0,
    GiaTriMax: 100,
    DonVi: "%",
    ThuTu: 2,
  },
  {
    TenTieuChi: "ƒê·ªïi m·ªõi", // ‚Üê NEW
    LoaiTieuChi: "TANG_DIEM",
    GiaTriMin: 0,
    GiaTriMax: 100,
    DonVi: "%",
    ThuTu: 3,
  },
  // NOTE: "Vi ph·∫°m c≈©" removed
];

// ==================== TEST 1: Detection ====================
console.log("üìã TEST 1: detectCriteriaChanges()");
console.log("-------------------------------------------");

const detection = detectCriteriaChanges(currentCriteria, chuKyCriteria);

console.log("hasChanges:", detection.hasChanges);
console.log("Added:", detection.changes.added);
console.log("Removed:", detection.changes.removed);
console.log("Modified:", detection.changes.modified);

console.log("\n‚úÖ Expected:");
console.log("  - hasChanges: true");
console.log("  - Added: ['S√°ng t·∫°o', 'ƒê·ªïi m·ªõi']");
console.log("  - Removed: ['Vi ph·∫°m c≈©']");
console.log("  - Modified: ['Ch·∫•t l∆∞·ª£ng'] (GiaTriMax changed)");

console.log("\n");

// ==================== TEST 2: Merge ====================
console.log("üìã TEST 2: mergeCriteriaWithPreservedScores()");
console.log("-------------------------------------------");

const merged = mergeCriteriaWithPreservedScores(currentCriteria, chuKyCriteria);

console.log("Merged result:");
merged.forEach((tc, idx) => {
  console.log(
    `  ${idx + 1}. ${tc.TenTieuChi}: DiemDat=${tc.DiemDat}, GhiChu="${
      tc.GhiChu
    }", GiaTriMax=${tc.GiaTriMax}`
  );
});

console.log("\n‚úÖ Expected:");
console.log("  1. Ch·∫•t l∆∞·ª£ng: DiemDat=85 (preserved), GiaTriMax=50 (updated)");
console.log("  2. Ti·∫øn ƒë·ªô: DiemDat=90 (preserved), GiaTriMax=100");
console.log("  3. S√°ng t·∫°o: DiemDat=0 (new), GiaTriMax=100");
console.log("  4. ƒê·ªïi m·ªõi: DiemDat=0 (new), GiaTriMax=100");

console.log("\n");

// ==================== TEST 3: Message Formatting ====================
console.log("üìã TEST 3: formatSyncWarningMessage()");
console.log("-------------------------------------------");

const message = formatSyncWarningMessage(detection.changes);

console.log("Formatted message:");
console.log(`"${message}"`);

console.log("\n‚úÖ Expected:");
console.log(
  '  "Ph√°t hi·ªán 2 ti√™u ch√≠ m·ªõi: S√°ng t·∫°o, ƒê·ªïi m·ªõi. 1 ti√™u ch√≠ b·ªã x√≥a: Vi ph·∫°m c≈©. 1 ti√™u ch√≠ thay ƒë·ªïi: Ch·∫•t l∆∞·ª£ng."'
);

console.log("\n");

// ==================== TEST 4: Edge Cases ====================
console.log("üìã TEST 4: Edge Cases");
console.log("-------------------------------------------");

// 4a. No changes
const noChangeDetection = detectCriteriaChanges(
  currentCriteria,
  currentCriteria
);
console.log(
  "4a. No changes:",
  !noChangeDetection.hasChanges ? "‚úÖ PASS" : "‚ùå FAIL"
);

// 4b. Empty current (all new)
const allNewDetection = detectCriteriaChanges([], chuKyCriteria);
console.log(
  "4b. All new:",
  allNewDetection.changes.added.length === 4 ? "‚úÖ PASS" : "‚ùå FAIL"
);

// 4c. Empty chuKy (all removed)
const allRemovedDetection = detectCriteriaChanges(currentCriteria, []);
console.log(
  "4c. All removed:",
  allRemovedDetection.changes.removed.length === 3 ? "‚úÖ PASS" : "‚ùå FAIL"
);

// 4d. Merge with empty current
const mergedFromEmpty = mergeCriteriaWithPreservedScores([], chuKyCriteria);
console.log(
  "4d. Merge from empty:",
  mergedFromEmpty.length === 4 && mergedFromEmpty[0].DiemDat === 0
    ? "‚úÖ PASS"
    : "‚ùå FAIL"
);

console.log("\n========================================");
console.log("üéâ All tests completed!");
console.log("========================================");
